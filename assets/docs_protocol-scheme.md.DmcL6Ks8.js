import{_ as a,c as e,o,a4 as t}from"./chunks/framework.IXvbZIHp.js";const u=JSON.parse('{"title":"自定义协议方案","description":"","frontmatter":{},"headers":[],"relativePath":"docs/protocol-scheme.md","filePath":"docs/protocol-scheme.md","lastUpdated":1705662684000}'),c={name:"docs/protocol-scheme.md"},r=t('<h1 id="自定义协议方案" tabindex="-1">自定义协议方案 <a class="header-anchor" href="#自定义协议方案" aria-label="Permalink to &quot;自定义协议方案&quot;">​</a></h1><div class="warning custom-block"><p class="custom-block-title">警告</p><p>此文档为 LiteLoaderQQNT 1.0.0 编写</p></div><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p>一些自定义的 URL 协议方案，方便插件开发</p><h2 id="用法" tabindex="-1">用法 <a class="header-anchor" href="#用法" aria-label="Permalink to &quot;用法&quot;">​</a></h2><h3 id="local" tabindex="-1">local <a class="header-anchor" href="#local" aria-label="Permalink to &quot;local&quot;">​</a></h3><p><code>file</code> 协议的代替方案，读取本地文件，使用绝对路径</p>',7),l=[r];function s(d,i,n,h,_,p){return o(),e("div",null,l)}const f=a(c,[["render",s]]);export{u as __pageData,f as default};
